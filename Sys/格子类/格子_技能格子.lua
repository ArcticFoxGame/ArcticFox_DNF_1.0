--=============================================================================--
-- @作者: 白狐剑仙。
-- @邮箱: 1733450036@qq.com
-- @创建时间:   2017-08-01 12:45:25
-- @最后修改来自: 白狐剑仙。
-- @Last Modified time: 2017-11-22 15:19:29
--=============================================================================--
格子_技能格子 = class()
--=============================================================================--
-- ■ 构造函数
--=============================================================================--
function 格子_技能格子:初始化(x坐标, y坐标, 宽, 高,标识,_类型,页数)

    self.标识 = 标识
    self.坐标 = {x=x坐标,y=y坐标}

    self.包围盒  = require("gge包围盒")(x坐标, y坐标, 宽, 高)

    self.技能  = nil

    self.类型 = _类型

	self.风格提示= {原始内容 = "" ,风格文字组 = {},宽度 = 0,高度 = 0}

	self.焦点 = false

	self.激活 = false

	self.检测组 = {}

	if(页数 == nil)then
	else
		self.分层 = 页数
	end

	self.栏位精灵 = require("gge精灵类")(Q_目录..[[/Dat/UI/技能UI/独立栏位.png]],0,0,36,48)

	self.激活精灵 = require("gge精灵类")(Q_目录..[[/Dat/UI/技能UI/选中.png]], 0, 0, 46, 58)
	self.激活精灵:置混合(混合_颜色乘)

	self.精通精灵 = require("gge精灵类")(Q_目录..[[/Dat/UI/技能UI/精通.png]],0,0,38,50)

end

--=============================================================================--
-- ■ 更新
--=============================================================================--
function 格子_技能格子:更新()

	if(self.技能 ~= nil)then

		if ( self.技能.延时时间 ~= 0) then

			self.技能.可用 = false

			self.技能.延时时间参考 =  self.技能.延时时间参考 + dt

			if (self.技能.延时时间参考 >= self.技能.延时时间) then
				self.技能.延时时间参考 = 0
				self.技能.延时时间 = 0
				self.技能.特效显示 = true
				self.技能.可用 = true
				self.技能.CD特效:重置()
			end
		else

		end

		if (self.技能.特效显示 ) then

			self.技能.CD特效:更新(12,13,21)

			if (self.技能.CD特效:取间隔帧() > 7) then
				self.技能.特效显示 = false
			end

		end


		self:前置条件技能检测()

	end

	if (self.包围盒:检查点(Q_鼠标坐标.x,Q_鼠标坐标.y)) then

		if ( self.技能 == nil and self.焦点 == false) then
			self.焦点 = true
		end

		if (引擎.鼠标弹起(键_鼠标左)) then -- 左键放置技能

			--if (Q_鼠标道具.对象 ~= nil) then
			--	return
			--end

			if (self.标识 <= 20) then -- 技能窗口内的格子

				if (self.技能 ~= nil and self.技能.等级 > 0  and self.技能.技能类型 ~= "被动技能") then  -- 自身有技能

					if( Q_鼠标技能.对象 == nil and self.分层 == Q_技能窗口.页数)then
						for n=1 ,12 do
							if(Q_快捷技能格子[n].技能 ~= nil and self.技能.技能名称 == Q_快捷技能格子[n].技能.技能名称)then
								table.insert(self.检测组,n)
								break
							end
						end
						if(next(self.检测组) ~= nil)then
						else
							Q_鼠标技能.对象 = self.技能
						end
					end

				end

			else  -- 快捷格子

				if (Q_鼠标技能.对象 ~= nil) then -- 鼠标有技能

					if (self.技能 ~= nil) then  -- 自身有技能 交换

						self.技能,Q_鼠标技能.对象 =  Q_鼠标技能.对象 ,self.技能

					else
						self:置技能(Q_鼠标技能.对象.技能名称)
						Q_鼠标技能.对象 = nil
					end

				else


					if (self.技能 ~= nil and self.技能.等级 > 0) then  -- 自身有技能 鼠标拿起

						Q_鼠标技能.对象 = self.技能
						--Q_最后点击格子id_技能 = self.标识
						self.技能 = nil
					end

				end

			end
		end
	else
		self.焦点 = false
	end

	if (引擎.鼠标按下(键_鼠标左) and self.栏位精灵:取包围盒():检查点(Q_鼠标坐标.x,Q_鼠标坐标.y) and self.类型 == "技能" and self.技能 ~= nil and self.分层 == Q_技能窗口.页数) then
		self.激活 = true
	elseif(引擎.鼠标按下(键_鼠标左) and self.栏位精灵:取包围盒():检查点(Q_鼠标坐标.x,Q_鼠标坐标.y) == false and self.类型 == "技能" and self.技能 ~= nil and self.分层 == Q_技能窗口.页数)then
		self.激活 = false
	end

end

--=============================================================================--
-- ■ 显示
--=============================================================================--
function 格子_技能格子:显示()


	if(self.类型 == "技能")then
		self.栏位精灵:显示(self.坐标.x -5 , self.坐标.y -3)
	end

	if(self.技能 ~= nil) then

		if ( self.技能.延时时间 ~= 0) then -- self.技能.类型 == "快捷" and

			self.技能.精灵:置颜色(颜色_灰)
			self.技能.精灵:置区域 (0 ,0, 28, 28)
			self.技能.精灵:显示(self.坐标.x ,self.坐标.y)

			self.技能.精灵:置颜色(ARGB(255,255,255,255))
			self.技能.精灵:置区域 (0 ,0, 28, 28 - (self.技能.延时时间 - self.技能.延时时间参考) / self.技能.延时时间 * 28)

		else

			self.技能.精灵:置颜色(颜色_白)

			if (not self.技能.可用) then
				self.技能.精灵:置颜色(颜色_灰)
			end

		end

		self.技能.精灵:显示(self.坐标.x ,self.坐标.y)

		if (self.技能.特效显示)then
			self.技能.CD特效:显示_高级(self.坐标.x-1 ,self.坐标.y)
		end

		if((self.技能.等级 == self.技能.最高等级) and self.类型 == "技能")then
			self.精通精灵:显示( self.坐标.x -6 , self.坐标.y -4 )
		elseif(self.类型 == "技能")then
			文字_描边显示(文字, self.坐标.x ,self.坐标.y + 30,string.format("Lv:%d" ,self.技能.等级),颜色_白,颜色_黑)
		end

		if (self.激活 == true) then
			self.激活精灵:显示(self.坐标.x -10,self.坐标.y -9)
		end

		if( self.包围盒:检查点(Q_鼠标坐标.x, Q_鼠标坐标.y) )then

			if( self.类型 == "快捷" )then
				Q_格子选中效果精灵:显示(self.坐标.x-1 ,self.坐标.y-1)
			elseif( self.类型 == "技能" )then
			else
				Q_格子选中效果精灵:显示(self.坐标.x-1 ,self.坐标.y-1)
			end
		end

	end

	if (Q_调试) then

		self.包围盒:显示()
		文字:显示(self.坐标.x ,self.坐标.y , self.标识)
	end


end

--=============================================================================--
-- ■ 发动技能()
--=============================================================================--
function 格子_技能格子:发动技能(按键值)

	if (self.技能 ~= nil ) then  -- 有技能


		if (self.技能.可用 and Q_主角.角色属性.MP >= self.技能.消耗MP and self.技能.延时时间 == 0) then

			if (Q_主角:发动技能(self.技能.技能动作,按键值)) then  -- 发动成功

				self.技能.延时时间参考 = 0
				self.技能.延时时间 = self.技能.冷却时间
				Q_主角.抖动 = 0
				Q_主角.抖动值 = 0
				Q_主角.角色属性.MP = Q_主角.角色属性.MP - self.技能.消耗MP

				return 1

			else
			end
		elseif( Q_主角:是否在释放技能状态() )then
		else
			Q_主角.未准备好音效:播放()
			Q_主角.抖动 = 0.1

			return 2
		end

	end

end

--=============================================================================--
-- ■ 置技能()
--=============================================================================--
function 格子_技能格子:置技能(技能名称)

	self.技能 = Q_游戏技能组[技能名称]

	if(self.技能 ~= nil)then

		self.技能.可用 = true

		self.风格提示.原始内容 = 格式化技能属性(self.技能)
		self.风格提示.风格文字组, self.风格提示.宽度 , self.风格提示.高度 = 格式化文字(文字,self.风格提示.原始内容,5)

		self.技能.CD特效 = wfox_pak.创建(Q_屏幕_特效_管理器,13,true)
		self.技能.CD特效:置混合 (混合_颜色乘)


		self.技能.等级 = 1
		self.技能.下一学习等级 = self.技能.学习等级

		if( (self.技能.技能名称 == "重甲精通" or self.技能.技能名称 == "后跳" or self.技能.技能名称 == "上挑") and self.技能.等级 == 0 )then
			self.技能.等级=1
		end
	end

end

--=============================================================================--
-- ■ 销毁()
--=============================================================================--
function 格子_技能格子:前置条件技能检测()

	if( (self.技能.技能名称 == "银光落刃" and Q_主角:是否在跳跃状态() == false) or (self.技能.技能名称 == "连突刺" and Q_主角.状态 ~= "前刺攻击") or
		(self.技能.技能名称 == "空中连斩" and Q_主角:是否在跳跃状态() == false) or (self.技能.技能名称 == "后跳斩" and Q_主角:是否在跳跃状态() == false) ) then
		self.技能.可用 = false
	elseif( (self.技能.技能名称 == "银光落刃" and Q_主角:是否在跳跃状态()) or (self.技能.技能名称 == "连突刺" and Q_主角.状态 == "前刺攻击") or
		(self.技能.技能名称 == "空中连斩" and Q_主角:是否在跳跃状态()) or (self.技能.技能名称 == "后跳斩" and Q_主角:是否在跳跃状态()) )then
		self.技能.可用 = true
	end

end

--=============================================================================--
-- ■ 销毁()
--=============================================================================--
function 格子_技能格子:销毁()

	self.CD特效:销毁()
	if (self.技能 ~= nil) then
		self.技能.精灵:置区域 (0 ,0, 28, 28)
	end
end
