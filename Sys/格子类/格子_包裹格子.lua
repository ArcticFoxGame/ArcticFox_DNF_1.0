--==============================================================================--
--╭━━╮┏━━╮╭━━╮╭━━╮╭╭╮╮╭━━╮　╭╭╮╮╭━━╮╭╮╭╮╭━━╮
--┃╭━╯┃╭╮┃┃╭━╯┃╭╮┃┃　　┃┃╭━╯　┃　　┃┃╭╮┃┃╰╯┃┃╭━╯
--┃╰━╮┃┃┃┃┃┃╭╮┃╰╯┃┃┃┃┃┃╰━╮　┃┃┃┃┃╰╯┃┃　╭╯┃╰━╮
--┃╭━╯┃┃┃┃┃┃┃┃┃╭╮┃┃╭╮┃┃╭━╯　┃╭╮┃┃╭╮┃┃　╰╮┃╭━╯
--┃╰━╮┃╰╯┃┃╰╯┃┃┃┃┃┃┃┃┃┃╰━╮　┃┃┃┃┃┃┃┃┃╭╮┃┃╰━╮
--╰━━╯┗━━╯╰━━╯╰╯╰╯╰╯╰╯╰━━╯  ╰╯╰╯╰╯╰╯╰╯╰╯╰━━╯
--
-- 作者:  创建:2010年9月11日13时44分25秒
--=============================================================================--

格子_包裹格子  = class()

--=============================================================================--
-- ■ 构造函数
--=============================================================================--
function 格子_包裹格子:初始化(x坐标, y坐标, 宽, 高,标识,类型)

    self.标识 = 标识
    self.x =  x坐标
    self.y =  y坐标
    self.包围盒  = require ("gge包围盒")(x坐标, y坐标, 宽, 高)
    self.极品项目 = 0
    self.道具信息 = ""
    self.道具 = {id=0,位置=标识,数量=0}
	self.首次按下 = 0
	self.焦点 = false
	self.类型  = 类型
	self.偏移Y = 0

	self.风格提示= {
			原始内容 = "" ,
			风格文字组 = {},
			宽度 = 0,
			高度 = 0
	}

	self.特殊标识风格提示= {
			原始内容 = "" ,
			风格文字组 = {},
			宽度 = 0,
			高度 = 0
	}

	if (self.标识 > 100 and self.标识 <= 110) then

		if (self.标识 == 101) then
			self.特殊标识风格提示.原始内容 = "头肩"
		elseif (self.标识 == 102) then
			self.特殊标识风格提示.原始内容 = "上衣"
		elseif (self.标识 == 103) then
			self.特殊标识风格提示.原始内容 = "下装"
		elseif (self.标识 == 104) then
			self.特殊标识风格提示.原始内容 = "鞋子"
		elseif (self.标识 == 105) then
			self.特殊标识风格提示.原始内容 = "腰带"
		elseif (self.标识 == 106) then
			self.特殊标识风格提示.原始内容 = "手镯"
		elseif (self.标识 == 107) then
			self.特殊标识风格提示.原始内容 = "项链"
		elseif (self.标识 == 108) then
			self.特殊标识风格提示.原始内容 = "戒指"
		elseif (self.标识 == 109) then
			self.特殊标识风格提示.原始内容 = "武器"
		elseif (self.标识 == 110) then
			self.特殊标识风格提示.原始内容 = "称号"
		end

		self.特殊标识风格提示.风格文字组, self.特殊标识风格提示.宽度 , self.特殊标识风格提示.高度 = 格式化文字 (文字,string.format("[%s]",self.特殊标识风格提示.原始内容),5)

	end

	if (self.标识 > 600 and self.标识 <= 610) then

		if (self.标识 == 601) then
			self.特殊标识风格提示.原始内容 = "头部"
		elseif (self.标识 == 602) then
			self.特殊标识风格提示.原始内容 = "帽子"
		elseif (self.标识 == 603) then
			self.特殊标识风格提示.原始内容 = "脸部"
		elseif (self.标识 == 604) then
			self.特殊标识风格提示.原始内容 = "胸部"
		elseif (self.标识 == 605) then
			self.特殊标识风格提示.原始内容 = "上衣"
		elseif (self.标识 == 606) then
			self.特殊标识风格提示.原始内容 = "皮肤"
		elseif (self.标识 == 607) then
			self.特殊标识风格提示.原始内容 = "腰部"
		elseif (self.标识 == 608) then
			self.特殊标识风格提示.原始内容 = "下装"
		elseif (self.标识 == 609) then
			self.特殊标识风格提示.原始内容 = "鞋子"
		end

		self.特殊标识风格提示.风格文字组, self.特殊标识风格提示.宽度 , self.特殊标识风格提示.高度 = 格式化文字 (文字,string.format("[%s]",self.特殊标识风格提示.原始内容),5)

	end

end

--=============================================================================--
-- ■ 更新
--=============================================================================--
function 格子_包裹格子:更新()

	if ( self.包围盒:检查点(Q_鼠标坐标.x, Q_鼠标坐标.y) and Q_出售锁定格子 ~= self.标识 ) then  --and Q_分解强化窗口.分解物格子 ~= self.标识 --and Q_信息框.焦点 == false and Q_NPC菜单.焦点 == false--and Q_信息框.袖珍罐_罐子所在格子 ~= self.标识

		--减少道具到0设定道具已经为未持有状态
		if(self.道具.数量 == 0)then
			self.道具.id = 0
		end

		if (Q_鼠标道具.id  == 0 and 引擎.鼠标按下(键_鼠标右) ) then	 -- 鼠标右键单击格子
			self:鼠标右键单击逻辑()
		end

		if (引擎.鼠标按下(键_鼠标左) ) then

			if (Q_鼠标技能.对象  ~= nil) then
				return
			end

			if (Q_鼠标道具.id  == 0) then--鼠标按下 鼠标无物品 格子本身有物品   ->拿起道具

				if ( self:是商店格子() ) then -- 商店格子鼠标处理
					if (Q_游戏鼠标.模式 == "出售") then
						return
					end

					if (Q_游戏鼠标.模式 == "购买") then

						if (self.道具.id > 0 and Q_信息框.可视 == false ) then

							if (Q_游戏道具组[self.道具.id].价格 > Q_主角.金币) then

								Q_信息框:提示(-1,-1,
								按行格式化文本(string.format("金币不足，缺少%d金币！",Q_游戏道具组[self.道具.id].价格 - Q_主角.金币),文字,10),"确认" )
								Q_鼠标道具.id = 0

							else

								if (Q_游戏道具组 [self.道具.id].总类 == "装备" or Q_游戏道具组 [self.道具.id].总类 == "装扮") then

									Q_信息框:提示(Q_鼠标坐标.x,Q_鼠标坐标.y,
									string.format("购买[%s]\n%s",Q_游戏道具组 [self.道具.id].名称,按行格式化文本("需要金币" .. 取整(Q_游戏道具组 [self.道具.id].价格) .. ",确定要购买吗？",文字,10)),
									"确认取消","购买道具",self.道具.id ,1 )
								else
									Q_信息框:提示(Q_鼠标坐标.x,Q_鼠标坐标.y,"","数量输入","购买",self.道具.id )
								end

							end


						end

					else
						Q_鼠标道具.id  = self.道具.id
						Q_鼠标道具.数量 = self.道具.数量
						Q_最后点击格子id = self.标识
						Q_最后点击包裹子夹 = Q_包裹窗口.子夹ID
						if (Q_鼠标道具.id >0) then
							Q_包裹窗口:自动子夹(Q_鼠标道具.id)
						end
					end

				else

					if (Q_游戏鼠标.模式 == "购买") then
						return
					end

					if (Q_游戏鼠标.模式 == "出售") then

						if ((self.标识 >=101 and self.标识 <=110) or (self.标识 >=601 and self.标识 <=609)) then -- 身上装备禁止快速出售
							return
						end

						if (self.道具.id > 0 and Q_信息框.可视 == false ) then

							if (Q_游戏道具组 [self.道具.id].总类 == "装备" or Q_游戏道具组 [self.道具.id].总类 == "装扮") then
								Q_信息框:提示(Q_鼠标坐标.x,Q_鼠标坐标.y,
								string.format("出售[%s]\n%s",Q_游戏道具组 [self.道具.id].名称,按行格式化文本("总出售价格为" .. 取整(Q_游戏道具组 [self.道具.id].价格/2) .. "金币\n确定要出售吗？",文字,13)),
								"确认取消","出售道具",self.标识 ,1)
							else
								Q_信息框:提示(Q_鼠标坐标.x,Q_鼠标坐标.y,"","数量输入","出售",self.标识 )
							end
						end

					elseif (Q_游戏鼠标.模式 == "分解") then

						if (self.标识 >=101 and self.标识 <=110) then -- 身上装备禁止快速分解
							return
						end
						if (self.道具.id > 0 and Q_信息框.可视 == false ) then

							if (Q_游戏道具组 [self.道具.id].总类 == "装备") then

								if (Q_分解强化窗口.启动分解) then
									Q_信息框:提示(Q_鼠标坐标.x,Q_鼠标坐标.y,"\n正在运行中..请稍后!\n","确认" )
								else

									Q_分解强化窗口.分解物格子 = self.标识
									Q_信息框:提示(Q_鼠标坐标.x,Q_鼠标坐标.y,"确认要分解此物品吗？","分解","分解装备",self.标识)

								end

							else
								Q_信息框:提示(Q_鼠标坐标.x,Q_鼠标坐标.y,"\n只有装备才可以被分解！\n","确认" )
							end
						end

					else
						if ( self:能否拿起()) then --包裹其他格子处理
							Q_全局音效.道具_拿起_音效:播放()
							Q_鼠标道具.id  = self.道具.id
							Q_鼠标道具.数量 = self.道具.数量
							self.道具.id = 0
							Q_最后点击格子id = self.标识
							Q_最后点击包裹子夹 = Q_包裹窗口.子夹ID

							if (self.标识 == 605) then -- 包裹身体装扮格子
								Q_主角:更新纸娃娃("上衣","默认")
							elseif (self.标识 == 608) then
								Q_主角:更新纸娃娃("下装","默认")
							elseif (self.标识 == 609) then
								Q_主角:更新纸娃娃("鞋","默认")
							elseif (self.标识 == 601) then
								Q_主角:更新纸娃娃("头部","默认")
							elseif (self.标识 == 604) then
								Q_主角:更新纸娃娃("胸部","空")
							elseif (self.标识 == 109) then
								Q_主角:更新纸娃娃("武器","默认")

							end

						end
					end

				end

			else
				if ( self:是商店格子() ) then -- 商店格子鼠标处理

				     if (Q_最后点击格子id ~= 0 and (Q_最后点击格子id <201 or  Q_最后点击格子id >500 and Q_最后点击格子id <= 610)) then      -- 卖东西

						if (Q_游戏道具组 [Q_鼠标道具.id].总类 == "装备" or Q_游戏道具组 [Q_鼠标道具.id].总类 == "装扮") then

							--金币_音效:播放()

							--Q_信息框:提示(Q_鼠标坐标.x,Q_鼠标坐标.y,
							--string.format("出售[%s]\n%s",Q_游戏道具组 [Q_鼠标道具.id].名称,按行格式化文本("总出售价格为" .. 取整(Q_游戏道具组 [Q_鼠标道具.id].价格/2) .. "金币\n确定要出售吗？",文字,13)),
							--"确认取消","出售武器",self.标识 ,1)
							Q_系统:增加金币(Q_游戏道具组 [Q_鼠标道具.id].价格/2 )
							Q_鼠标道具.id = 0
						else
							Q_出售锁定格子 = Q_最后点击格子id

							if (Q_最后点击格子id > 32) then  -- 快捷栏中的格子
								Q_快捷道具格子[Q_最后点击格子id-50]:置道具(Q_鼠标道具.id,true,Q_鼠标道具.数量)

							else
								Q_包裹窗口.子夹组[Q_最后点击包裹子夹].格子[Q_最后点击格子id]:置道具(Q_鼠标道具.id,true,Q_鼠标道具.数量)
							end

							Q_信息框:提示(Q_鼠标坐标.x,Q_鼠标坐标.y,"","数量输入","出售",Q_最后点击格子id )
							Q_鼠标道具.id = 0
							Q_出售锁定格子 = 0
						end

					     return
				     end

					if (self.道具.id == 0 ) then   	 --鼠标按下 且鼠标有物品 包裹位置没有物品    ->在该位置放下物品
						Q_鼠标道具.id = 0
					else					        	-- 鼠标按下 且鼠标和包裹该位置都有物品     ->交换道具

						Q_鼠标道具.id  = self.道具.id

					end

				else  -- 包裹格子处理
					if ( self:检测是否可放() ) then

						if (self.道具.id == 0 ) then      	 --鼠标按下 且鼠标有物品 包裹位置没有物品    ->在该位置放下物品

							self:置道具(Q_鼠标道具.id,true,Q_鼠标道具.数量)
							Q_鼠标道具.id = 0
							Q_鼠标道具.数量 = 0

						else					        	--鼠标按下 且鼠标和包裹该位置都有物品     ->交换道具

							if (Q_鼠标道具.id == self.道具.id and Q_游戏道具组 [Q_鼠标道具.id].总类 ~= "装备") then
								local 剩余数量 = 0
								剩余数量 = Q_鼠标道具.数量 + self.道具.数量 - 1000
								if (剩余数量<=0) then
									self.道具.数量  = self.道具.数量 + Q_鼠标道具.数量
									Q_鼠标道具.id = 0
									Q_鼠标道具.数量 = 0
								else
									self.道具.数量 = 1000
									Q_鼠标道具.数量 = 剩余数量
								end

							else
								Q_鼠标道具.id,self.道具.id,Q_鼠标道具.数量,self.道具.数量 = self.道具.id,Q_鼠标道具.id,self.道具.数量,Q_鼠标道具.数量
								self:置道具(self.道具.id,true,self.道具.数量)
							end

						end
					end
				end
			end

		end

	else

		self.焦点 = false

	end

end

--=============================================================================--
-- ■ 能否拿起()
--=============================================================================--
function 格子_包裹格子:能否拿起()

	if (self.道具.id > 0 and self.标识 > 0) then
		return true
	end

--	if (self.标识 >= 150 and self.标识 <= 157) then  -- 如果是快捷格子
--		if (Q_屏幕.鼠标窗口全id ~=0 ) then
--			return false
--		end
--	end

	return false

end

--=============================================================================--
-- ■ 发动道具
--=============================================================================--
function 格子_包裹格子:发动道具()

	if (self.道具.id > 0 and self.标识 >= 1 and  self.标识 <= 56) then


		if (self.标识 >= 51 and self.标识 <= 56 ) then -- 快捷键格子
			Q_最后使用道具格子 = Q_快捷道具格子[self.标识-50]
		else
			Q_最后使用道具格子 = Q_包裹窗口.子夹组[Q_包裹窗口.子夹ID].格子[self.标识]
		end

		if( Q_物品脚本组[Q_游戏道具组[self.道具.id].名称] ~= nil) then
			Q_物品脚本组[Q_游戏道具组[self.道具.id].名称].Main()
		end

	end

	if(self.道具.id ~= 0)then

		if (Q_游戏道具组[self.道具.id].总类 == "装备") then  -- 可装备到身上的道具
			self:右键_身上格子填充道具(Q_游戏道具组[self.道具.id].分类)
		else
			return
		end
	end

end

--=============================================================================--
-- ■ 鼠标右键单击逻辑
--=============================================================================--
function 格子_包裹格子:鼠标右键单击逻辑()

	if (self.道具.id > 0 and Q_鼠标道具.id ==0 ) then

		if (Q_游戏道具组[self.道具.id].限制职业 ~= "0"  and Q_游戏道具组[self.道具.id].限制职业 ~= Q_主角.职业) then
			return
		end

		if (self.标识 >= 1 and  self.标识 <= 56) then   -- 如果是包裹格子

			if (self.标识 >= 51 and self.标识 <= 56 ) then -- 快捷键格子
				Q_最后使用道具格子 = Q_快捷道具格子[self.标识-50]
			else

				Q_最后使用道具格子 = Q_包裹窗口.子夹组[Q_包裹窗口.子夹ID].格子[self.标识]
			end

			if( Q_物品脚本组[Q_游戏道具组[self.道具.id].名称] ~= nil) then
				Q_物品脚本组[Q_游戏道具组[self.道具.id].名称].Main()
			end

			if(self.道具.id ~= 0)then

				if (Q_游戏道具组[self.道具.id].总类 == "装备") then  -- 可装备到身上的道具
					self:右键_身上格子填充道具(Q_游戏道具组[self.道具.id].分类)
				end
			end

		elseif (self.标识 >100 and  self.标识 <= 110) then
			self:右键_身上格子卸掉道具()

		elseif (self.标识 >500 and  self.标识 <= 535) then  --包裹时装格子

			if (Q_游戏道具组[self.道具.id].限制职业 == Q_主角.职业) then
				self:右键_身上时装填充道具(Q_游戏道具组[self.道具.id].子类)
			end

		elseif (self.标识 >600 and  self.标识 < 610) then  --身体装备时装
			self:右键_身上装扮格子卸掉道具()

		end

	end

end

--=============================================================================--
-- ■ 右键_身上时装填充道具()
--=============================================================================--
function 格子_包裹格子:右键_身上时装填充道具(类型)

	local 本次道具id = self.道具.id

	if(Q_游戏道具组[self.道具.id].需要等级 <=Q_主角.角色属性.等级) then

		if (类型 == "上衣") then
			self:右键_装备道具(5)

		elseif (类型 == "下装") then
			self:右键_装备道具(8)

		elseif (类型 == "鞋") then
			self:右键_装备道具(9)

		elseif (类型 == "头部") then
			self:右键_装备道具(1)

		elseif (类型 == "胸部") then
			self:右键_装备道具(4)
		end
	end
end

--=============================================================================--
-- ■ 右键_身上格子填充道具()
--=============================================================================--
function 格子_包裹格子:右键_身上装扮格子卸掉道具()

	if( Q_包裹窗口:取装扮物品数() <28) then

		if (self.标识 == 605) then -- 包裹身体装扮格子
			Q_主角:更新纸娃娃("上衣","默认")
			Q_包裹窗口:增加装扮物品(self.道具.id)
			self.道具.id = 0

		elseif (self.标识 == 608) then
			Q_主角:更新纸娃娃("下装","默认")
			Q_包裹窗口:增加装扮物品(self.道具.id)
			self.道具.id = 0

		elseif (self.标识 == 609) then
			Q_主角:更新纸娃娃("鞋","默认")
			Q_包裹窗口:增加装扮物品(self.道具.id)
			self.道具.id = 0

		elseif (self.标识 == 601) then
			Q_主角:更新纸娃娃("头部","默认")
			Q_包裹窗口:增加装扮物品(self.道具.id)
			self.道具.id = 0

		elseif (self.标识 == 604) then
			Q_主角:更新纸娃娃("胸部","空")
			Q_包裹窗口:增加装扮物品(self.道具.id)
			self.道具.id = 0

		end

	end

end

--=============================================================================--
-- ■ 右键_身上格子卸掉道具()
--=============================================================================--
function 格子_包裹格子:右键_身上格子卸掉道具()

	if (self.标识 == 109) then

		if(Q_包裹窗口:取物品数(1) <32) then
			Q_主角:更新纸娃娃("武器","默认")
			Q_包裹窗口:增加物品old(1,self.道具.id,1)
			self.道具.id = 0
		else
			--Q_信息框:提示(-1,-1,"\n        包裹已满！        \n","确认" )
		end

	else

		if(Q_包裹窗口:取物品数(1) < 32) then
			Q_包裹窗口:增加物品old(1,self.道具.id)
			self.道具.id = 0
		else
			--Q_信息框:提示(-1,-1,"\n        包裹已满！        \n","确认" )
		end

	end

end

--=============================================================================--
-- ■ 右键_身上格子填充道具()
--=============================================================================--
function 格子_包裹格子:右键_身上格子填充道具(类型)

	local 本次道具id = self.道具.id

	if(Q_游戏道具组[self.道具.id].需要等级 <=Q_主角.角色属性.等级) then
		if (类型 == "头肩") then
			self:右键_装备道具(1)

		elseif (类型 == "上衣") then
			self:右键_装备道具(2)

		elseif (类型 == "下装") then
			self:右键_装备道具(3)

		elseif (类型 == "鞋") then
			self:右键_装备道具(4)

		elseif (类型 == "腰带") then
			self:右键_装备道具(5)

		elseif (类型 == "手镯") then
			self:右键_装备道具(6)

		elseif (类型 == "项链") then
			self:右键_装备道具(7)

		elseif (类型 == "戒指") then

			self:右键_装备道具(8)

		elseif (类型 == "武器") then
			self:右键_装备道具(9)

		elseif (类型 == "称号") then
			self:右键_装备道具(10)

		end
	else
	end

end

--=============================================================================--
-- ■ 是商店格子()
--=============================================================================--
function 格子_包裹格子:是商店格子()

	if (self.标识 > 200 and self.标识 < 501 ) then
		return true
	else
		return false
	end

end

--=============================================================================--
-- ■ 右键_装备道具()
--=============================================================================--
function 格子_包裹格子:右键_装备道具(目标格子)

	if (self.标识 <= 56  ) then  -- 是包裹和快捷键中的

		if (Q_包裹窗口.身体格子[目标格子].道具.id == 0) then -- 如果没有物品 就装备上

			Q_包裹窗口.身体格子[目标格子]:置道具(self.道具.id ,true,1 )
			self.道具.id = 0

		else 								-- 如果有 就交换

			Q_包裹窗口.身体格子[目标格子].道具.id,self.道具.id = self.道具.id ,Q_包裹窗口.身体格子[目标格子].道具.id
			self:置道具(self.道具.id,true,1)
			Q_包裹窗口.身体格子[目标格子]:置道具(Q_包裹窗口.身体格子[目标格子].道具.id,1)

		end

	elseif (self.标识 >500 and  self.标识 <=535  ) then  -- 是装扮包裹中的

		if (Q_包裹窗口.身体装扮格子[目标格子].道具.id == 0) then -- 如果没有物品 就装备上
			Q_包裹窗口.身体装扮格子[目标格子]:置道具(self.道具.id ,true,1 )
			self.道具.id = 0

		else 								-- 如果有 就交换
			Q_包裹窗口.身体装扮格子[目标格子].道具.id,self.道具.id = self.道具.id ,Q_包裹窗口.身体装扮格子[目标格子].道具.id
			self:置道具(self.道具.id,true,1)
			Q_包裹窗口.身体装扮格子[目标格子]:置道具(Q_包裹窗口.身体装扮格子[目标格子].道具.id,1)

		end

		--MSG("[系统]","使用失败，需求条件不符。"   ,颜色_红)
	end


end

--=============================================================================--
-- ■ 检测是否可放()
--=============================================================================--
function 格子_包裹格子:检测是否可放()

	if (self.标识 >= 1 and  self.标识 <= 56  ) then   -- 如果是包裹格子

		-- 商店物品处理逻辑__开始

		if (Q_最后点击格子id > 200  and Q_最后点击格子id < 501) then  -- 商店里面拿出的物品

			--if (self.道具.id ~= 0) then  -- 如果当前格子有物品 禁止交换
			--	return false
			--end

			if (Q_游戏道具组[Q_鼠标道具.id].价格 > Q_主角.金币) then
				Q_信息框:提示(-1,-1,
				按行格式化文本(string.format("金币不足，缺少%d金币！",Q_游戏道具组[Q_鼠标道具.id].价格 - Q_主角.金币),文字,10),"确认" )
				Q_鼠标道具.id = 0

			else


				if (Q_系统:增加物品(Q_游戏道具组[Q_鼠标道具.id].名称,1))then
					Q_系统:增加金币(- Q_游戏道具组[Q_鼠标道具.id].价格 )
					Q_鼠标道具.id = 0
				end
			end

			return false
		end

		-- 商店物品处理逻辑__结束

		if (self.类型 == "快捷" or Q_游戏道具组[Q_鼠标道具.id].总类 == self.类型) then
			return true
		else

			Q_包裹窗口:归还道具(Q_鼠标道具.id,Q_鼠标道具.数量)
			Q_鼠标道具.id = 0
			Q_鼠标道具.数量 = 0
			return false
		end

	elseif (self.标识 >= 501 and  self.标识 <= 535 ) then   -- 如果是装扮格子

		if (Q_最后点击格子id > 500) then
			return true

		elseif (Q_最后点击格子id > 200  and Q_最后点击格子id < 501) then  -- 商店里面拿出的物品


			if (Q_游戏道具组[Q_鼠标道具.id].价格 > Q_主角.金币) then
				Q_信息框:提示(-1,-1,
				按行格式化文本(string.format("金币不足，缺少%d金币！",Q_游戏道具组[Q_鼠标道具.id].价格 - Q_主角.金币),文字,10),"确认" )
				Q_鼠标道具.id = 0

			else

				if (Q_系统:增加物品(Q_游戏道具组[Q_鼠标道具.id].名称,1)) then
					Q_系统:增加金币(- Q_游戏道具组[Q_鼠标道具.id].价格 )
					Q_鼠标道具.id = 0
				end

			end

			return false

		elseif (Q_最后点击格子id >= 1 and Q_最后点击格子id <= 56) then  --包裹格子
			Q_包裹窗口.模式 = "物品"
			Q_包裹窗口:归还道具(Q_鼠标道具.id,Q_鼠标道具.数量)
			Q_鼠标道具.id = 0
			Q_鼠标道具.数量 = 0
			return false
		end

	end

	if (Q_游戏道具组[Q_鼠标道具.id].限制职业 == Q_主角.职业) then

		if (Q_游戏道具组[Q_鼠标道具.id].分类 == "装扮" and Q_游戏道具组[Q_鼠标道具.id].子类 == "上衣" and self.标识 == 605 ) then
			return true
		end

		if (Q_游戏道具组[Q_鼠标道具.id].分类 == "装扮" and Q_游戏道具组[Q_鼠标道具.id].子类 == "下装" and self.标识 == 608 ) then
			return true
		end

		if (Q_游戏道具组[Q_鼠标道具.id].分类 == "装扮" and Q_游戏道具组[Q_鼠标道具.id].子类 == "头部" and self.标识 == 601 ) then
			return true
		end

		if (Q_游戏道具组[Q_鼠标道具.id].分类 == "装扮" and Q_游戏道具组[Q_鼠标道具.id].子类 == "胸部" and self.标识 == 604 ) then
			return true
		end

	end

	if (Q_游戏道具组[Q_鼠标道具.id].限制职业 ~= "0"  and Q_游戏道具组[Q_鼠标道具.id].限制职业 ~= Q_主角.职业) then
		return false
	end

	if (Q_游戏道具组[Q_鼠标道具.id].分类 == "头肩" and self.标识 == 101 ) then
		return true
	end

	if (Q_游戏道具组[Q_鼠标道具.id].分类 == "上衣" and self.标识 == 102 ) then
		return true
	end

	if (Q_游戏道具组[Q_鼠标道具.id].分类 == "下装" and self.标识 == 103 ) then
		return true
	end

	if (Q_游戏道具组[Q_鼠标道具.id].分类 == "鞋" and self.标识 == 104 ) then
		return true
	end

	if (Q_游戏道具组[Q_鼠标道具.id].分类 == "腰带" and self.标识 == 105 ) then
		return true
	end

	if (Q_游戏道具组[Q_鼠标道具.id].分类 == "手镯" and self.标识 == 106 ) then
		return true
	end

	if (Q_游戏道具组[Q_鼠标道具.id].分类 == "项链" and self.标识 == 107 ) then
		return true
	end

	if (Q_游戏道具组[Q_鼠标道具.id].分类 == "戒指" and self.标识 == 108 ) then
		return true
	end

	if (Q_游戏道具组[Q_鼠标道具.id].分类 == "武器" and self.标识 == 109 ) then
		return true
	end

	if (Q_游戏道具组[Q_鼠标道具.id].分类 == "称号" and self.标识 == 110 ) then
		return true
	end

	return false
end

--=============================================================================--
-- ■ 显示
--=============================================================================--
function 格子_包裹格子:显示(偏移Y)

	if (偏移Y == nil) then
		偏移Y = 0
	end
	self.偏移Y = 偏移Y

	self.包围盒:置坐标(self.x,self.y + self.偏移Y)

	if(self.道具.id ~= 0) then

		if ( Q_游戏道具组[self.道具.id].总类 == "消耗品") then

			if ( Q_游戏道具组[self.道具.id].子类 == "HP"  and self.标识 <=56 ) then
				if (Q_全局CD.HP_延时时间 ~= 0) then
					Q_游戏道具组[self.道具.id].精灵:置颜色(ARGB(颜色_灰))
					Q_游戏道具组[self.道具.id].精灵:显示(self.x  ,self.y + self.偏移Y)
					Q_游戏道具组[self.道具.id].精灵:置区域 (0 ,0, 28, 28)
					Q_游戏道具组[self.道具.id].精灵:显示(self.x ,self.y+ self.偏移Y)
					Q_游戏道具组[self.道具.id].精灵:置颜色(ARGB(255,255,255,255))
					Q_游戏道具组[self.道具.id].精灵:置区域 (0 ,0, 28, 28 - Q_全局CD.HP_延时进度)
					Q_游戏道具组[self.道具.id].精灵:显示(self.x ,self.y+ self.偏移Y)

				else
					Q_游戏道具组[self.道具.id].精灵:置区域 (0 ,0, 28, 28)
					Q_游戏道具组[self.道具.id].精灵:置颜色(ARGB(255,255,255,255))
					Q_游戏道具组[self.道具.id].精灵:显示(self.x  ,self.y + self.偏移Y)

					if (Q_全局CD.HP_特效显示)then
						Q_全局CD.HP_延时特效:显示(self.x-2  ,self.y + self.偏移Y)
					end

				end

			elseif ( Q_游戏道具组[self.道具.id].子类 == "MP"  and self.标识 <=56 ) then
				if (Q_全局CD.MP_延时时间 ~= 0) then
					Q_游戏道具组[self.道具.id].精灵:置颜色(ARGB(颜色_灰))
					Q_游戏道具组[self.道具.id].精灵:显示(self.x  ,self.y + self.偏移Y)
					Q_游戏道具组[self.道具.id].精灵:置区域 (0 ,0, 28, 28)
					Q_游戏道具组[self.道具.id].精灵:显示(self.x ,self.y+ self.偏移Y)
					Q_游戏道具组[self.道具.id].精灵:置颜色(ARGB(255,255,255,255))
					Q_游戏道具组[self.道具.id].精灵:置区域 (0 ,0, 28, 28 - Q_全局CD.MP_延时进度)
					Q_游戏道具组[self.道具.id].精灵:显示(self.x ,self.y+ self.偏移Y)

				else
					Q_游戏道具组[self.道具.id].精灵:置区域 (0 ,0, 28, 28)
					Q_游戏道具组[self.道具.id].精灵:置颜色(ARGB(255,255,255,255))
					Q_游戏道具组[self.道具.id].精灵:显示(self.x  ,self.y + self.偏移Y)

					if (Q_全局CD.MP_特效显示)then
						Q_全局CD.MP_延时特效:显示(self.x -2 ,self.y + self.偏移Y)
					end

				end

			else
				Q_游戏道具组[self.道具.id].精灵:置区域 (0 ,0, 28, 28)
				Q_游戏道具组[self.道具.id].精灵:置颜色(颜色_白)
				Q_游戏道具组[self.道具.id].精灵:显示(self.x -2 ,self.y + self.偏移Y)
			end

		else

			Q_游戏道具组[self.道具.id].精灵:显示(self.x-1  ,self.y + self.偏移Y-1)

		end

		if (Q_游戏道具组[self.道具.id].总类 ~= "装备" and Q_游戏道具组[self.道具.id].总类 ~= "装扮" and self.道具.数量 > 1) then
			文字_描边显示(文字,self.x+3 ,self.y -1 ,string.format("%4d",self.道具.数量),颜色_白,颜色_黑)
		end


	else

		if (Q_鼠标道具.id ~= 0 ) then
			if ( (Q_游戏道具组[Q_鼠标道具.id].分类 == self.特殊标识风格提示.原始内容 and self.标识 < 111 ) or (Q_游戏道具组[Q_鼠标道具.id].子类 == self.特殊标识风格提示.原始内容 and self.标识 > 600)) then
				Q_格子选中效果精灵:显示(self.x - 1.5 ,self.y-1+ self.偏移Y)
			end
		end
	end

	if ( self.包围盒:检查点(Q_鼠标坐标.x, Q_鼠标坐标.y) ) then
		if (self.道具.id  == 0 and self.标识 > 100 and self.标识 <= 110) then
			Q_屏幕.最顶气泡显示 = true
			Q_屏幕.风格提示.风格文字组 = self.特殊标识风格提示.风格文字组
			Q_屏幕.风格提示.宽度 = self.特殊标识风格提示.宽度
			Q_屏幕.风格提示.高度 = self.特殊标识风格提示.高度
			Q_屏幕.风格提示.x = self.x  - 30 +20
			Q_屏幕.风格提示.y = self.y  - 30 + self.偏移Y
		elseif(self.道具.id  == 0 and self.标识 > 600 and self.标识 <= 610) then
			Q_屏幕.最顶气泡显示 = true
			Q_屏幕.风格提示.风格文字组 = self.特殊标识风格提示.风格文字组
			Q_屏幕.风格提示.宽度 = self.特殊标识风格提示.宽度
			Q_屏幕.风格提示.高度 = self.特殊标识风格提示.高度
			Q_屏幕.风格提示.x = self.x  - 30 +20
			Q_屏幕.风格提示.y = self.y  - 30 + self.偏移Y
		end
		Q_格子选中效果精灵:显示(self.x - 1.5 ,self.y-1 + self.偏移Y)

		if(self.道具.id  ~= 0)then
			if ( self.标识 > 100 and  self.标识 < 110) then
				self.风格提示.原始内容 = 格式化道具属性(self.道具.id ,self.标识 )
			else
				self.风格提示.原始内容 = 格式化道具属性(self.道具.id )
			end
			self.风格提示.风格文字组, self.风格提示.宽度 , self.风格提示.高度 = 格式化文字 (文字,self.风格提示.原始内容,1,"物品")
		end
	end

	if (Q_调试) then
		--self.包围盒:置颜色(颜色_黄)
		self.包围盒:显示(颜色_黄)
		文字:显示(self.x ,self.y + self.偏移Y , self.标识)
	end
end

--=============================================================================--
-- ■ 置道具()
--=============================================================================--
function 格子_包裹格子:置道具(id,是否播放音效,数量)

   	self.道具.id = id
	self.道具.数量 = 数量

	if (self.道具.id > 0 ) then

		if ( self.标识 > 100 and  self.标识 < 110) then
			self.风格提示.原始内容 = 格式化道具属性(self.道具.id ,self.标识 )
		else
			self.风格提示.原始内容 = 格式化道具属性(self.道具.id )
		end

		self.风格提示.风格文字组, self.风格提示.宽度 , self.风格提示.高度 = 格式化文字 (文字,self.风格提示.原始内容,1)

		if (是否播放音效 == true ) then

			if ( Q_游戏道具组[self.道具.id].分类 == "项链"   ) then

				Q_全局音效.道具_项链_音效:播放()

			elseif (Q_游戏道具组[self.道具.id].分类 == "戒指") then

				Q_全局音效.道具_戒指_音效:播放()

			elseif (Q_游戏道具组[self.道具.id].分类 == "手镯") then

				Q_全局音效.道具_手镯_音效:播放()

			elseif (Q_游戏道具组[self.道具.id].分类 == "武器") then

				if (Q_游戏道具组[self.道具.id].子类 == "钝器") then
					Q_全局音效.道具_钝器_音效:播放()
				elseif(Q_游戏道具组[self.道具.id].子类 == "短剑") then
					Q_全局音效.道具_短剑_音效:播放()
				elseif(Q_游戏道具组[self.道具.id].子类 == "太刀") then
					Q_全局音效.道具_太刀_音效:播放()
				elseif(Q_游戏道具组[self.道具.id].子类 == "巨剑") then
					Q_全局音效.道具_巨剑_音效:播放()
				elseif(Q_游戏道具组[self.道具.id].子类 == "光剑") then
					Q_全局音效.道具_光剑_音效:播放()
				end

			elseif (Q_游戏道具组[self.道具.id].攻击速度状态 == "药水") then
				Q_全局音效.道具_药水_音效:播放()

			elseif (Q_游戏道具组[self.道具.id].攻击速度状态 == "食物") then
				Q_全局音效.道具_食物_音效:播放()

			elseif (Q_游戏道具组[self.道具.id].攻击速度状态 == "重物") then
				Q_全局音效.道具_重物_音效:播放()

			elseif (Q_游戏道具组[self.道具.id].攻击速度状态 == "晶石") then
				Q_全局音效.道具_晶石_音效:播放()

			elseif (Q_游戏道具组[self.道具.id].分类 == "上衣" or Q_游戏道具组[self.道具.id].分类 == "头肩" or Q_游戏道具组[self.道具.id].分类 == "腰带" or Q_游戏道具组[self.道具.id].分类 == "下装" or Q_游戏道具组[self.道具.id].分类 == "鞋" ) then

				if (Q_游戏道具组[self.道具.id].子类 == "重甲") then
					Q_全局音效.道具_重甲_音效:播放()
				elseif (Q_游戏道具组[self.道具.id].子类 == "布甲" or Q_游戏道具组[self.道具.id].子类 == "皮甲") then
					Q_全局音效.道具_布皮甲_音效:播放()
				elseif (Q_游戏道具组[self.道具.id].子类 == "轻甲") then
					Q_全局音效.道具_轻甲_音效:播放()
				end

			end

		end


		if ( self.标识 > 600 and  self.标识 < 610) then -- 身体装扮格子
			Q_主角:更新纸娃娃(Q_游戏道具组[self.道具.id].子类,Q_游戏道具组[self.道具.id].攻击速度状态)

		elseif ( self.标识 == 109) then  -- 身体武器格子
			Q_主角:更新纸娃娃(Q_游戏道具组[self.道具.id].分类,Q_游戏道具组[self.道具.id].名称)

		end

	end

end

--=============================================================================--
-- ■ 置位置()
--=============================================================================--
function 格子_包裹格子:置位置(x坐标,y坐标)

      self.x = x坐标
      self.y = y坐标

      self.包围盒:置坐标(self.x,self.y)

end

--=============================================================================--
-- ■ 置位置()
--=============================================================================--
function 格子_包裹格子:道具出售(数量)

	--Q_系统:增加金币(Q_游戏道具组 [self.道具.id].价格/2 * 数量)
	金币_音效:播放()

	if (数量 == self.道具.数量) then
		self.道具.id = 0
	else
		self.道具.数量 = self.道具.数量 - 数量
	end

end