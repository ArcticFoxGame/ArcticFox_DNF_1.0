--=============================================================================--
-- @作者: 白狐剑仙。
-- @邮箱: 1733450036@qq.com
-- @创建时间:   2017-08-01 12:45:25
-- @最后修改来自: 白狐剑仙。
-- @Last Modified time: 2017-11-22 15:19:48
--=============================================================================--
窗口_角色技能类 = class()
--=============================================================================--
-- ■ 构造函数
--=============================================================================--
function 窗口_角色技能类:初始化()

	self.标识 = "技能窗口"

	self.技能坐标x = 125
	self.技能坐标y = 75

	self.技能偏移x = 0
	self.技能偏移y = 0

	self.页数 = 1

	self.移动  = true
	self.可移动 = true

	self.可视 = false

	self.事件激活 = false

	self.最后激活时间 = 0

	self.点燃焦点 = true
	self.焦点 = false

	self.激活 = false

	self.触发移动包围盒 = require("gge包围盒")(self.技能坐标x - 9.5, self.技能坐标y - 7, 588, 25)
	self.触发包围盒 = require("gge包围盒")(self.技能坐标x + 5, self.技能坐标y + 5, 568, 408)

	self.面板精灵1 = require("gge精灵类")(Q_目录..[[/Dat/UI/窗口横条/面板精灵1.png]], 0, 0, 39, 39)
	self.面板精灵2 = require("gge精灵类")(Q_目录..[[/Dat/UI/窗口横条/面板精灵2.png]], 0, 0, 103, 31)
	self.面板精灵3 = require("gge精灵类")(Q_目录..[[/Dat/UI/窗口横条/面板精灵3.png]], 0, 0, 428, 31)
	self.面板精灵4 = require("gge精灵类")(Q_目录..[[/Dat/UI/窗口横条/面板精灵4.png]], 0, 0, 68, 31)

	self.窗口点燃精灵1 = require("gge精灵类")(Q_目录..[[/Dat/UI/窗口横条/点燃精灵1.png]], 0, 0, 101, 24)
	self.窗口点燃精灵2 = require("gge精灵类")(Q_目录..[[/Dat/UI/窗口横条/点燃精灵2.png]], 0, 0, 427, 19)
	self.窗口点燃精灵3 = require("gge精灵类")(Q_目录..[[/Dat/UI/窗口横条/点燃精灵3.png]], 0, 0, 60, 19)
	self.窗口点燃精灵1:置混合(混合_颜色乘)
	self.窗口点燃精灵2:置混合(混合_颜色乘)
	self.窗口点燃精灵3:置混合(混合_颜色乘)

	self.图标精灵 = require("gge精灵类")(Q_目录..[[/Dat/UI/技能UI/技能图标.png]], 0, 0, 30, 30)

	self.技能关闭按钮 = 扩展_三层按钮.创建(Q_目录..[[/dat/UI/技能UI/窗口关闭按钮/]], self.技能坐标x+564, self.技能坐标y-2.5)
	self.技能关闭按钮.音效 = 鼠标经过按钮音效

	self.学习技能按钮 = 扩展_三层按钮.创建(Q_目录..[[/dat/UI/模板按钮_中/]], self.技能坐标x+120, self.技能坐标y+383,"文字按钮","学习技能")
	self.学习技能按钮.音效 = 鼠标经过按钮音效

	self.技能加点按钮 = 扩展_三层按钮.创建(Q_目录..[[/dat/UI/模板按钮_中/]], self.技能坐标x+200, self.技能坐标y+383,"文字按钮","技能加点")
	self.技能加点按钮.音效 = 鼠标经过按钮音效

	self.重置技能按钮 = 扩展_三层按钮.创建(Q_目录..[[/dat/UI/模板按钮_大/]], self.技能坐标x+280, self.技能坐标y+383,"文字按钮","重置技能加点")
	self.重置技能按钮.音效 = 鼠标经过按钮音效

	self.页数左按钮 = 扩展_三层按钮.创建(Q_目录..[[/dat/UI/技能UI/页数选择左按钮/]], self.技能坐标x+10, self.技能坐标y+388)
	self.页数左按钮.音效 = 鼠标经过按钮音效

	self.页数右按钮 = 扩展_三层按钮.创建(Q_目录..[[/dat/UI/技能UI/页数选择右按钮/]], self.技能坐标x+100, self.技能坐标y+388)
	self.页数右按钮.音效 = 鼠标经过按钮音效

	self.页面组 = {}
	self.页面组[1] = {技能格子组 = {}}
	self.页面组[2] = {技能格子组 = {}}

	if(Q_主角.职业 == "鬼剑士")then

		--通用技能
		self.页面组[1].技能格子组[1] = 格子_技能格子.创建(self.技能坐标x + 185, self.技能坐标y + 173 ,28,28,1,"技能",1)
		self.页面组[1].技能格子组[2] = 格子_技能格子.创建(self.技能坐标x + 126, self.技能坐标y + 127 ,28,28,2,"技能",1)
		self.页面组[1].技能格子组[3] = 格子_技能格子.创建(self.技能坐标x + 244, self.技能坐标y + 127 ,28,28,3,"技能",1)
		self.页面组[1].技能格子组[4] = 格子_技能格子.创建(self.技能坐标x + 126, self.技能坐标y + 219 ,28,28,4,"技能",1)
		self.页面组[1].技能格子组[5] = 格子_技能格子.创建(self.技能坐标x + 244, self.技能坐标y + 219 ,28,28,5,"技能",1)
		self.页面组[1].技能格子组[6] = 格子_技能格子.创建(self.技能坐标x + 36, self.技能坐标y + 87 ,28,28,6,"技能",1)
		self.页面组[1].技能格子组[7] = 格子_技能格子.创建(self.技能坐标x + 126, self.技能坐标y + 57 ,28,28,7,"技能",1)
		self.页面组[1].技能格子组[8] = 格子_技能格子.创建(self.技能坐标x + 244, self.技能坐标y + 57 ,28,28,8,"技能",1)
		self.页面组[1].技能格子组[9] = 格子_技能格子.创建(self.技能坐标x + 334, self.技能坐标y + 87 ,28,28,9,"技能",1)
		self.页面组[1].技能格子组[10] = 格子_技能格子.创建(self.技能坐标x + 36, self.技能坐标y + 259 ,28,28,10,"技能",1)
		self.页面组[1].技能格子组[11] = 格子_技能格子.创建(self.技能坐标x + 126, self.技能坐标y + 289 ,28,28,11,"技能",1)
		self.页面组[1].技能格子组[12] = 格子_技能格子.创建(self.技能坐标x + 185, self.技能坐标y + 319 ,28,28,12,"技能",1)
		self.页面组[1].技能格子组[13] = 格子_技能格子.创建(self.技能坐标x + 244, self.技能坐标y + 289 ,28,28,13,"技能",1)
		self.页面组[1].技能格子组[14] = 格子_技能格子.创建(self.技能坐标x + 334, self.技能坐标y + 259 ,28,28,14,"技能",1)--]]

		--基础技能
		self.页面组[2].技能格子组[1] = 格子_技能格子.创建(self.技能坐标x + 126, self.技能坐标y + 67 ,28,28,1,"技能",2)
		self.页面组[2].技能格子组[2] = 格子_技能格子.创建(self.技能坐标x + 244, self.技能坐标y + 67 ,28,28,2,"技能",2)

		self.页面组[2].技能格子组[3] = 格子_技能格子.创建(self.技能坐标x + 66, self.技能坐标y + 137 ,28,28,3,"技能",2)
		self.页面组[2].技能格子组[4] = 格子_技能格子.创建(self.技能坐标x + 136, self.技能坐标y + 137 ,28,28,4,"技能",2)
		self.页面组[2].技能格子组[5] = 格子_技能格子.创建(self.技能坐标x + 234, self.技能坐标y + 137 ,28,28,5,"技能",2)
		self.页面组[2].技能格子组[6] = 格子_技能格子.创建(self.技能坐标x + 304, self.技能坐标y + 137 ,28,28,6,"技能",2)

		self.页面组[2].技能格子组[7] = 格子_技能格子.创建(self.技能坐标x + 126, self.技能坐标y + 207 ,28,28,7,"技能",2)
		self.页面组[2].技能格子组[8] = 格子_技能格子.创建(self.技能坐标x + 244, self.技能坐标y + 207 ,28,28,8,"技能",2)

		self.页面组[2].技能格子组[9] = 格子_技能格子.创建(self.技能坐标x + 56, self.技能坐标y + 277 ,28,28,9,"技能",2)
		self.页面组[2].技能格子组[10] = 格子_技能格子.创建(self.技能坐标x + 126, self.技能坐标y + 277 ,28,28,10,"技能",2)
		self.页面组[2].技能格子组[11] = 格子_技能格子.创建(self.技能坐标x + 244, self.技能坐标y + 277 ,28,28,11,"技能",2)
		self.页面组[2].技能格子组[12] = 格子_技能格子.创建(self.技能坐标x + 314, self.技能坐标y + 277 ,28,28,12,"技能",2)
		self.页面组[2].技能格子组[13] = 格子_技能格子.创建(self.技能坐标x + 185, self.技能坐标y + 277 ,28,28,13,"技能",2)

	end

	if(Q_主角.职业 == "鬼剑士")then

		self.页面组[1].技能格子组[1]:置技能("重甲精通") --重甲精通
		self.页面组[1].技能格子组[2]:置技能("物理暴击") --物理暴击
		self.页面组[1].技能格子组[3]:置技能("魔法暴击") --魔法暴击
		self.页面组[1].技能格子组[4]:置技能("物理背击") --物理背击
		self.页面组[1].技能格子组[5]:置技能("魔法背击") --魔法背击
		self.页面组[1].技能格子组[6]:置技能("后跳") --后跳
		self.页面组[1].技能格子组[7]:置技能("跃翔") --跃翔
		self.页面组[1].技能格子组[8]:置技能("远古记忆") --远古记忆
		self.页面组[1].技能格子组[9]:置技能("不屈意志") --不屈意志
		self.页面组[1].技能格子组[10]:置技能("钝器精通") --钝器精通
		self.页面组[1].技能格子组[11]:置技能("短剑精通") --短剑精通
		self.页面组[1].技能格子组[12]:置技能("光剑精通") --光剑精通
		self.页面组[1].技能格子组[13]:置技能("太刀精通") --太刀精通
		self.页面组[1].技能格子组[14]:置技能("巨剑精通") --巨剑精通--]]

		self.页面组[2].技能格子组[1]:置技能("鬼斩") --鬼斩
		self.页面组[2].技能格子组[2]:置技能("上挑") --上挑
		self.页面组[2].技能格子组[3]:置技能("银光落刃") --银光落刃
		self.页面组[2].技能格子组[4]:置技能("连突刺") --连突刺
		self.页面组[2].技能格子组[5]:置技能("格挡") --格挡
		self.页面组[2].技能格子组[6]:置技能("空中连斩") --空中连斩
		self.页面组[2].技能格子组[7]:置技能("崩山击") --崩山击
		self.页面组[2].技能格子组[8]:置技能("裂波斩") --裂波斩
		self.页面组[2].技能格子组[9]:置技能("地裂波动剑") --地裂波动剑
		self.页面组[2].技能格子组[10]:置技能("三段斩") --三段斩
		self.页面组[2].技能格子组[11]:置技能("十字斩") --十字斩
		self.页面组[2].技能格子组[12]:置技能("月光斩") --月光斩
		self.页面组[2].技能格子组[13]:置技能("后跳斩") --后跳斩--]]

		Q_快捷技能格子[1]:置技能("鬼斩") --鬼斩
		Q_快捷技能格子[2]:置技能("地裂波动剑") --地裂波动剑
		Q_快捷技能格子[3]:置技能("十字斩") --十字斩
		Q_快捷技能格子[4]:置技能("三段斩") --三段斩
		Q_快捷技能格子[7]:置技能("月光斩") --月光斩
		Q_快捷技能格子[8]:置技能("崩山击") --崩山击
		Q_快捷技能格子[9]:置技能("裂波斩") --裂波斩
		Q_快捷技能格子[10]:置技能("格挡") --格挡
		Q_快捷技能格子[11]:置技能("上挑") --上挑--]]

	end
end
--=============================================================================--
-- ■ 开始移动()
--=============================================================================--
function 窗口_角色技能类:位置移动()

	if(self.页数 == 1)then

		self.页面组[1].技能格子组[1].坐标.x,self.页面组[1].技能格子组[1].坐标.y = self.技能坐标x + 185, self.技能坐标y + 173
		self.页面组[1].技能格子组[1].包围盒:置坐标(self.技能坐标x + 185, self.技能坐标y + 173)
		self.页面组[1].技能格子组[2].坐标.x,self.页面组[1].技能格子组[2].坐标.y = self.技能坐标x + 126, self.技能坐标y + 127
		self.页面组[1].技能格子组[2].包围盒:置坐标(self.技能坐标x + 126, self.技能坐标y + 127)
		self.页面组[1].技能格子组[3].坐标.x,self.页面组[1].技能格子组[3].坐标.y = self.技能坐标x + 244, self.技能坐标y + 127
		self.页面组[1].技能格子组[3].包围盒:置坐标(self.技能坐标x + 244, self.技能坐标y + 127)
		self.页面组[1].技能格子组[4].坐标.x,self.页面组[1].技能格子组[4].坐标.y = self.技能坐标x + 126, self.技能坐标y + 219
		self.页面组[1].技能格子组[4].包围盒:置坐标(self.技能坐标x + 126, self.技能坐标y + 219)
		self.页面组[1].技能格子组[5].坐标.x,self.页面组[1].技能格子组[5].坐标.y = self.技能坐标x + 244, self.技能坐标y + 219
		self.页面组[1].技能格子组[5].包围盒:置坐标(self.技能坐标x + 244, self.技能坐标y + 219)
		self.页面组[1].技能格子组[6].坐标.x,self.页面组[1].技能格子组[6].坐标.y = self.技能坐标x + 36, self.技能坐标y + 87
		self.页面组[1].技能格子组[6].包围盒:置坐标(self.技能坐标x + 36, self.技能坐标y + 87)
		self.页面组[1].技能格子组[7].坐标.x,self.页面组[1].技能格子组[7].坐标.y = self.技能坐标x + 126, self.技能坐标y + 57
		self.页面组[1].技能格子组[7].包围盒:置坐标(self.技能坐标x + 126, self.技能坐标y + 57)
		self.页面组[1].技能格子组[8].坐标.x,self.页面组[1].技能格子组[8].坐标.y = self.技能坐标x + 244, self.技能坐标y + 57
		self.页面组[1].技能格子组[8].包围盒:置坐标(self.技能坐标x + 244, self.技能坐标y + 57)
		self.页面组[1].技能格子组[9].坐标.x,self.页面组[1].技能格子组[9].坐标.y = self.技能坐标x + 334, self.技能坐标y + 87
		self.页面组[1].技能格子组[9].包围盒:置坐标(self.技能坐标x + 334, self.技能坐标y + 87)
		self.页面组[1].技能格子组[10].坐标.x,self.页面组[1].技能格子组[10].坐标.y = self.技能坐标x + 36, self.技能坐标y + 259
		self.页面组[1].技能格子组[10].包围盒:置坐标(self.技能坐标x + 36, self.技能坐标y + 259)
		self.页面组[1].技能格子组[11].坐标.x,self.页面组[1].技能格子组[11].坐标.y = self.技能坐标x + 126, self.技能坐标y + 289
		self.页面组[1].技能格子组[11].包围盒:置坐标(self.技能坐标x + 126, self.技能坐标y + 289)
		self.页面组[1].技能格子组[12].坐标.x,self.页面组[1].技能格子组[12].坐标.y = self.技能坐标x + 185, self.技能坐标y + 319
		self.页面组[1].技能格子组[12].包围盒:置坐标(self.技能坐标x + 185, self.技能坐标y + 319)
		self.页面组[1].技能格子组[13].坐标.x,self.页面组[1].技能格子组[13].坐标.y = self.技能坐标x + 244, self.技能坐标y + 289
		self.页面组[1].技能格子组[13].包围盒:置坐标(self.技能坐标x + 244, self.技能坐标y + 289)
		self.页面组[1].技能格子组[14].坐标.x,self.页面组[1].技能格子组[14].坐标.y = self.技能坐标x + 334, self.技能坐标y + 259
		self.页面组[1].技能格子组[14].包围盒:置坐标(self.技能坐标x + 334, self.技能坐标y + 259)--]]

	elseif(self.页数 == 2)then

		self.页面组[2].技能格子组[1].坐标.x,self.页面组[2].技能格子组[1].坐标.y =self.技能坐标x + 126, self.技能坐标y + 67
		self.页面组[2].技能格子组[1].包围盒:置坐标(self.技能坐标x + 126, self.技能坐标y + 67)
		self.页面组[2].技能格子组[2].坐标.x,self.页面组[2].技能格子组[2].坐标.y = self.技能坐标x + 244, self.技能坐标y + 67
		self.页面组[2].技能格子组[2].包围盒:置坐标(self.技能坐标x + 244, self.技能坐标y + 67)
		self.页面组[2].技能格子组[3].坐标.x,self.页面组[2].技能格子组[3].坐标.y =self.技能坐标x + 66, self.技能坐标y + 137
		self.页面组[2].技能格子组[3].包围盒:置坐标(self.技能坐标x + 66, self.技能坐标y + 137)
		self.页面组[2].技能格子组[4].坐标.x,self.页面组[2].技能格子组[4].坐标.y = self.技能坐标x + 136, self.技能坐标y + 137
		self.页面组[2].技能格子组[4].包围盒:置坐标(self.技能坐标x + 136, self.技能坐标y + 137)
		self.页面组[2].技能格子组[5].坐标.x,self.页面组[2].技能格子组[5].坐标.y = self.技能坐标x + 234, self.技能坐标y + 137
		self.页面组[2].技能格子组[5].包围盒:置坐标(self.技能坐标x + 234, self.技能坐标y + 137)
		self.页面组[2].技能格子组[6].坐标.x,self.页面组[2].技能格子组[6].坐标.y = self.技能坐标x + 304, self.技能坐标y + 137
		self.页面组[2].技能格子组[6].包围盒:置坐标(self.技能坐标x + 304, self.技能坐标y + 137)
		self.页面组[2].技能格子组[7].坐标.x,self.页面组[2].技能格子组[7].坐标.y = self.技能坐标x + 126, self.技能坐标y + 207
		self.页面组[2].技能格子组[7].包围盒:置坐标(self.技能坐标x + 126, self.技能坐标y + 207)
		self.页面组[2].技能格子组[8].坐标.x,self.页面组[2].技能格子组[8].坐标.y = self.技能坐标x + 244, self.技能坐标y + 207
		self.页面组[2].技能格子组[8].包围盒:置坐标(self.技能坐标x + 244, self.技能坐标y + 207)
		self.页面组[2].技能格子组[9].坐标.x,self.页面组[2].技能格子组[9].坐标.y = self.技能坐标x + 56, self.技能坐标y + 277
		self.页面组[2].技能格子组[9].包围盒:置坐标(self.技能坐标x + 56, self.技能坐标y + 277)
		self.页面组[2].技能格子组[10].坐标.x,self.页面组[2].技能格子组[10].坐标.y = self.技能坐标x + 126, self.技能坐标y + 277
		self.页面组[2].技能格子组[10].包围盒:置坐标(self.技能坐标x + 126, self.技能坐标y + 277)
		self.页面组[2].技能格子组[11].坐标.x,self.页面组[2].技能格子组[11].坐标.y = self.技能坐标x + 244, self.技能坐标y + 277
		self.页面组[2].技能格子组[11].包围盒:置坐标(self.技能坐标x + 244, self.技能坐标y + 277)
		self.页面组[2].技能格子组[12].坐标.x,self.页面组[2].技能格子组[12].坐标.y = self.技能坐标x + 314, self.技能坐标y + 277
		self.页面组[2].技能格子组[12].包围盒:置坐标(self.技能坐标x + 314, self.技能坐标y + 277)
		self.页面组[2].技能格子组[13].坐标.x,self.页面组[2].技能格子组[13].坐标.y = self.技能坐标x + 185, self.技能坐标y + 277
		self.页面组[2].技能格子组[13].包围盒:置坐标(self.技能坐标x + 185, self.技能坐标y + 277)

	end
		self.技能关闭按钮:置位置(self.技能坐标x + 564,self.技能坐标y -2.5)
		self.学习技能按钮:置位置(self.技能坐标x + 120,self.技能坐标y +383)
		self.技能加点按钮:置位置(self.技能坐标x + 200,self.技能坐标y +383)
		self.重置技能按钮:置位置(self.技能坐标x + 280,self.技能坐标y +383)
		self.页数左按钮:置位置(self.技能坐标x + 10,self.技能坐标y +388)
		self.页数右按钮:置位置(self.技能坐标x + 100,self.技能坐标y +388)

		self.触发移动包围盒:置坐标(self.技能坐标x - 9.5, self.技能坐标y - 7)
		self.触发包围盒:置坐标(self.技能坐标x + 5, self.技能坐标y + 5)

end

--=============================================================================--
-- ■ 更新
--=============================================================================--
function 窗口_角色技能类:更新()

	if (self.可视 ) then

		if (Q_屏幕.鼠标窗口全id ~= 0 and Q_界面_窗口_数组[Q_屏幕.鼠标窗口全id].标识 == "技能窗口" ) then
			self.焦点 = true
		else
			self.焦点 = false
		end

	 	if (self.焦点 and 引擎.鼠标按下(键_鼠标左)) then
			self.点燃焦点 = true
			self.最后激活时间 = 引擎.取时间戳()
			self:学习技能()
		elseif (self.焦点 == false and 引擎.鼠标按下(键_鼠标左)) then
			self.点燃焦点 = false
		end

	    self.技能关闭按钮:更新()
		self.学习技能按钮:更新()
		self.技能加点按钮:更新()
		self.重置技能按钮:更新()
		self.页数左按钮:更新()
		self.页数右按钮:更新()

		if (self.技能关闭按钮:取是否单击() ) then
			self:开关()
		end
		if (self.页数左按钮:取是否单击()  and self.页数 >1) then
			self.页数 = self.页数 - 1
			for j=1,table.getn(self.页面组[1].技能格子组) do
				self.页面组[1].技能格子组[j].激活 = false
			end

			for j=1,table.getn(self.页面组[2].技能格子组) do
				self.页面组[2].技能格子组[j].激活 = false
			end
			self:位置移动()
		end
		if (self.页数右按钮:取是否单击() and self.页数 < 3 ) then
			self.页数 = self.页数 + 1
			for j=1,table.getn(self.页面组[1].技能格子组) do
				self.页面组[1].技能格子组[j].激活 = false
			end

			for j=1,table.getn(self.页面组[2].技能格子组) do
				self.页面组[2].技能格子组[j].激活 = false
			end
			self:位置移动()
		end
	end

	for n=1,table.getn(self.页面组)do
		for j=1,table.getn(self.页面组[n].技能格子组) do
			self.页面组[n].技能格子组[j]:更新()
		end
	end

end

--=============================================================================--
-- ■ 显示
--=============================================================================--
function 窗口_角色技能类:显示()

	if (self.可视) then
		Q_风格框( self.技能坐标x, self.技能坐标y, 565, 396, 255,1)--主面板背景

		self.面板精灵2:显示(self.技能坐标x - 5, self.技能坐标y - 10)
		self.面板精灵3:显示(self.技能坐标x + 95, self.技能坐标y - 10)
		self.面板精灵4:显示(self.技能坐标x + 521, self.技能坐标y -10)
		self.面板精灵1:显示(self.技能坐标x - 12, self.技能坐标y - 17)
		self.图标精灵:显示(self.技能坐标x - 8.8 , self.技能坐标y - 11)

		Q_风格框(self.技能坐标x + 10 , self.技能坐标y + 28, 355, 326, 255,3)--技能区

		Q_风格框(self.技能坐标x + 388 , self.技能坐标y + 21, 170, 100, 255,1)--展示区
		Q_风格框(self.技能坐标x + 391 , self.技能坐标y + 143, 175, 255, 255,2)--介绍区

		if(self.页数 == 1)then

			for j=1,table.getn(self.页面组[1].技能格子组) do
				self.页面组[1].技能格子组[j]:显示()

			end

		elseif(self.页数 == 2)then

			for j=1,table.getn(self.页面组[2].技能格子组) do
				self.页面组[2].技能格子组[j]:显示()
			end

		end

		if (self.点燃焦点)then
			self.窗口点燃精灵1:显示(self.技能坐标x -5 , self.技能坐标y -10)
			self.窗口点燃精灵2:显示(self.技能坐标x +96, self.技能坐标y -5 )
			self.窗口点燃精灵3:显示(self.技能坐标x + 523, self.技能坐标y-5 )
		end

		文字_描边显示(文字,self.技能坐标x+248,self.技能坐标y-2,"技能栏(K)",颜色_白)
		文字_描边显示(文字,self.技能坐标x + 462 , self.技能坐标y + 74,"暂无展示",颜色_白,颜色_黑)

		if(self.页数 == 1)then
			文字_描边显示(文字,self.技能坐标x + 42 , self.技能坐标y + 388,string.format("通用技能"),颜色_白)
		elseif(self.页数 == 2)then
			文字_描边显示(文字,self.技能坐标x + 42 , self.技能坐标y + 388,string.format("基础技能"),颜色_白)
		else
			文字_描边显示(文字,self.技能坐标x + 42 , self.技能坐标y + 388,string.format("强制技能"),颜色_白)
		end

		self.技能关闭按钮:显示()
		self.学习技能按钮:显示()
		self.技能加点按钮:显示()
		self.重置技能按钮:显示()
		self.页数左按钮:显示()
		self.页数右按钮:显示()

		if( Q_调试 and self.可视) then
			self.触发移动包围盒:显示()
			self.触发包围盒:显示()
		end
	end
end

--=============================================================================--
-- ■ 开始移动()
--=============================================================================--
function 窗口_角色技能类:开始移动()

	if (self.可视 and self.焦点 and self.可移动) then

		self.技能坐标x = Q_鼠标坐标.x - self.技能偏移x
		self.技能坐标y = Q_鼠标坐标.y - self.技能偏移y

		self:位置移动()

	end

end

--=============================================================================--
-- ■ 开关
--=============================================================================--
function 窗口_角色技能类:开关()

	self.可视 = not self.可视
	if (self.可视) then
		self.最后激活时间 = 引擎.取时间戳()
		self.焦点 = true
		self.点燃焦点 = true

		--Q_商店窗口.点燃焦点 = false

		self.技能坐标x = 125
		self.技能坐标y = 75

		self:位置移动()
		for j=1,table.getn(self.页面组) do
			for n=1,table.getn(self.页面组[j].技能格子组)do
				self.页面组[j].技能格子组[n].激活 = false
			end
		end
		窗口打开音效:播放()
	else
		self.焦点 = false
		窗口关闭音效:播放()
	end

end

--=============================================================================--
-- ■ 检测点()
--=============================================================================--
function 窗口_角色技能类:检测点()

	--if (self.事件激活) then
		--self.可移动 = false
	--else
		self.可移动 = true
	--end

	if (self.可视 and self.技能关闭按钮:是否有焦点() == false  ) then
		if (self.触发移动包围盒:检查点(Q_鼠标坐标.x,Q_鼠标坐标.y)) then
			return true
		end
	end

	return false

end

--=============================================================================--
-- ■ 检测点_全局()
--=============================================================================--
function 窗口_角色技能类:检测点_全局()

	if (self.触发包围盒:检查点(Q_鼠标坐标.x,Q_鼠标坐标.y) or self.触发移动包围盒:检查点(Q_鼠标坐标.x,Q_鼠标坐标.y)) then
		return  true
	end

	return false
end

--=============================================================================--
-- ■ 置焦点()
--=============================================================================--
function 窗口_角色技能类:置焦点(是否焦点)
	self.焦点 = 是否焦点
end

--=============================================================================--
-- ■ 初始移动()
--=============================================================================--
function 窗口_角色技能类:初始移动()

	self.最后激活时间 = 引擎.取时间戳()

	--if (self.事件激活 == false ) then
		Q_屏幕.移动焦点窗口 = true
	--end

	if (self.可视 and self.焦点 and self.可移动) then
		self.技能偏移x = Q_鼠标坐标.x - self.技能坐标x
		self.技能偏移y = Q_鼠标坐标.y - self.技能坐标y
	end

end

--=============================================================================--
-- ■ 学习技能
--=============================================================================--
function 窗口_角色技能类:学习技能()
for j = 1,2 do
	for n=1,table.getn(self.页面组[j].技能格子组) do
		if(self.页数 == self.页面组[j].技能格子组[n].分层)then
			--self.页面组[j].技能格子组[n]:学习技能()
		end
	end
end
end

--=============================================================================--
-- ■ 技能加点
--=============================================================================--
function 窗口_角色技能类:技能加点()
for j = 1,2 do
	for n=1,table.getn(self.页面组[j].技能格子组) do
		if(self.页数 == self.页面组[j].技能格子组[n].分层)then
			--self.页面组[j].技能格子组[n]:技能加点()
		end
	end
end
end

--=============================================================================--
-- ■ 显示角色技能属性
--=============================================================================--
function 窗口_角色技能类:显示角色技能属性()

	if (self.可视) then

		for j = 1,2 do
		for n=1,table.getn(self.页面组[j].技能格子组) do

			if (self.页面组[j].技能格子组[n].技能 ~= nil) then
				for j = 1,table.getn(self.页面组) do
				for n=1,table.getn(self.页面组[j].技能格子组)do

					if(self.页面组[j].技能格子组[n].激活== true and self.页数 == self.页面组[j].技能格子组[n].分层)then

						引擎.画线(self.技能坐标x + 394,self.技能坐标y + 169,self.技能坐标x + 573,self.技能坐标y + 169,ARGB(80,255,255,255))

						if(self.页面组[j].技能格子组[n].技能.技能类型 == "主动技能" )then

							if(self.页面组[j].技能格子组[n].技能.等级 == self.页面组[j].技能格子组[n].技能.最高等级)then
								文字_描边显示(文字,self.技能坐标x + 441,self.技能坐标y + 149,string.format("%s LV.MAX" ,self.页面组[j].技能格子组[n].技能.技能名称),颜色_白,颜色_黑)
							else
								文字_描边显示(文字,self.技能坐标x + 441,self.技能坐标y + 149,string.format("%s LV.%d" ,self.页面组[j].技能格子组[n].技能.技能名称,self.页面组[j].技能格子组[n].技能.等级),颜色_白,颜色_黑)
							end
							文字_描边显示(文字,self.技能坐标x + 396,self.技能坐标y + 179,"施放方式:瞬发",颜色_白,颜色_黑)

						elseif(self.页面组[j].技能格子组[n].技能.技能类型 == "被动技能")then

							if(self.页面组[j].技能格子组[n].技能.等级 == self.页面组[j].技能格子组[n].技能.最高等级)then
								文字_描边显示(文字,self.技能坐标x + 441,self.技能坐标y + 149,string.format("%s LV.MAX" ,self.页面组[j].技能格子组[n].技能.技能名称),颜色_白,颜色_黑)
							else
								文字_描边显示(文字,self.技能坐标x + 441,self.技能坐标y + 149,string.format("%s LV.%d" ,self.页面组[j].技能格子组[n].技能.技能名称,self.页面组[j].技能格子组[n].技能.等级),颜色_白,颜色_黑)
							end
							文字_描边显示(文字,self.技能坐标x + 396,self.技能坐标y + 179,"施放方式:被动",颜色_白,颜色_黑)

						end

						文字_描边显示(文字,self.技能坐标x + 396,self.技能坐标y + 199,string.format("消耗:%d MP" ,self.页面组[j].技能格子组[n].技能.消耗MP),颜色_白,颜色_黑)
						文字_描边显示(文字,self.技能坐标x + 396,self.技能坐标y + 219,string.format("冷却时间:%d 秒" ,self.页面组[j].技能格子组[n].技能.冷却时间),颜色_白,颜色_黑)
						文字_描边显示(文字,self.技能坐标x + 396,self.技能坐标y + 239,string.format("操作指令:%s " ,self.页面组[j].技能格子组[n].技能.操作指令),颜色_白,颜色_黑)
						文字_描边显示(文字,self.技能坐标x + 396,self.技能坐标y + 259,string.format("技能最高等级:LV%d " ,self.页面组[j].技能格子组[n].技能.最高等级),颜色_白,颜色_黑)

						if(Q_主角.角色属性.等级 >= self.页面组[j].技能格子组[n].技能.学习等级)then
							文字_描边显示(文字,self.技能坐标x + 396,self.技能坐标y + 279,string.format("学习等级:LV%d 以上 " ,self.页面组[j].技能格子组[n].技能.学习等级),颜色_白,颜色_黑)
						else
							文字_描边显示(文字,self.技能坐标x + 396,self.技能坐标y + 279,string.format("学习等级:LV%d 以上 " ,self.页面组[j].技能格子组[n].技能.学习等级),颜色_红,颜色_黑)
						end

						if((Q_主角.角色属性.等级 >= self.页面组[j].技能格子组[n].技能.下一学习等级) and (self.页面组[j].技能格子组[n].技能.等级 ~= self.页面组[j].技能格子组[n].技能.最高等级))then
							文字_描边显示(文字,self.技能坐标x + 396,self.技能坐标y  + 299,string.format("下一等级需要:LV%d 以上 " ,self.页面组[j].技能格子组[n].技能.下一学习等级),颜色_白,颜色_黑)
						elseif(Q_主角.角色属性.等级 < self.页面组[j].技能格子组[n].技能.下一学习等级 and (self.页面组[j].技能格子组[n].技能.等级 ~= self.页面组[j].技能格子组[n].技能.最高等级))then
							文字_描边显示(文字,self.技能坐标x + 396,self.技能坐标y  + 299,string.format("下一等级需要:LV%d 以上 " ,self.页面组[j].技能格子组[n].技能.下一学习等级),颜色_红,颜色_黑)
						elseif( self.页面组[j].技能格子组[n].技能.等级 == self.页面组[j].技能格子组[n].技能.最高等级)then
							文字_描边显示(文字,self.技能坐标x + 396,self.技能坐标y  + 299,string.format("已满级,无法提升 "),颜色_红,颜色_黑)
						end

						if(self.页面组[j].技能格子组[n].技能.界面说明 ~= "0")then

							self.原始内容 = 格式化技能栏属性(self.页面组[j].技能格子组[n].技能)
							self.说明内容,宽度,高度 = 格式化文字(文字,self.原始内容,1)

							for n=1,table.getn(self.说明内容) do
								文字_描边显示(文字,self.技能坐标x + 396 ,self.技能坐标y + 294 + self.说明内容[n].位置.y ,string.format("%s",self.说明内容[n].内容),颜色_黄,颜色_黑)
							end
						end

					end
				end
				end
				break
			end
		end
		end
	end

end

--=============================================================================--
-- ■ 销毁
--=============================================================================--
function 窗口_角色技能类:销毁()

	self.窗口关闭按钮:销毁()

end