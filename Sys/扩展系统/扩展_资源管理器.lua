--=============================================================================--
-- @作者: 白狐剑仙。
-- @邮箱: 1733450036@qq.com
-- @创建时间:   2017-08-01 12:45:25
-- @最后修改来自: 白狐剑仙。
-- @Last Modified time: 2018-02-22 19:19:20
--=============================================================================--
扩展_资源管理器  = class()
--=============================================================================--
-- ■ 构造函数
--=============================================================================--
function 扩展_资源管理器:初始化(pak包文件名)

	local PAK路径 = Q_目录..[[\]]
	local PAK解析 = package.loadlib("Dat/library/Animpack.dll","luaopen_pak")
	self.empak = PAK解析()

	if (引擎.文件是否存在(PAK路径..pak包文件名)) then

	    self.文件号,self.PAK信息 =self.empak.取pak信息(PAK路径..pak包文件名)

		if(self.PAK信息 == nil)then
			print("无法获取PAK文件信息!请检查文件!"..pak包文件名)
			return
		end

		local 首次分割 = 分割文本(self.PAK信息,"\n")
		self.PAK信息组 = {}

		for n =1 , table.getn(首次分割) do
			local 再一层分割文本组 = 分割文本 (首次分割[n],",")
			if (table.getn(再一层分割文本组) == 5) then
				self.PAK信息组[n]=
				{
					编号 = tonumber(再一层分割文本组[1]),
					偏移 = tonumber(再一层分割文本组[2]),
					大小	= tonumber(再一层分割文本组[3]),
					中心x = tonumber(再一层分割文本组[4]),
					中心y = tonumber(再一层分割文本组[5]),
					纹理 = 0
				}
			end
		end
	end

end
--=============================================================================--
-- ■ 取图片
--=============================================================================--
function 扩展_资源管理器:取图片(帧号,缓存)

	if (缓存==true) then  -- 资源复用
		if (self.PAK信息组[帧号].纹理 == 0 ) then--判断图片是否已加载
			self.指针,self.长度=self.empak.取PAK图片(self.文件号,self.PAK信息组[帧号].偏移,self.PAK信息组[帧号].大小)
			self.PAK信息组[帧号].纹理  = require("gge纹理类")(self.指针,self.长度)--载入纹理,保存到PAK信息组中
		end
		return self.PAK信息组[帧号].纹理--返回纹理
	else
		self.指针,self.长度=self.empak.取PAK图片(self.文件号,self.PAK信息组[帧号].偏移,self.PAK信息组[帧号].大小)
		return require("gge纹理类")(self.指针,self.长度)--载入纹理并返回
	end

end
--=============================================================================--
-- ■ 取PAK图片
--=============================================================================--
function 扩展_资源管理器:取PAK图片(偏移,大小)

	self.指针,self.长度=self.empak.取PAK图片(self.文件号,偏移,大小)
	self.纹理 = require("gge纹理类")(self.指针,self.长度)

	return self.纹理
end
--=============================================================================--
-- ■ 关闭pak
--=============================================================================--
function 扩展_资源管理器:关闭pak()
	if self.文件号 > 0 then
	    empak.关闭pak(self.文件号)
	end
end
--=============================================================================--
-- ■ 销毁
--=============================================================================--
function 扩展_资源管理器:销毁()

	for n=1,table.getn(self.PAK信息组) do

		if ( self.PAK信息组[n].纹理 ~= 0  ) then
			--self.PAK信息组[n].纹理:释放()
			self.PAK信息组[n].纹理 = nil
		end
	end
end
